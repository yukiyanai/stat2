{
  "hash": "746822d3efc6c99df787b34d27d14f07",
  "result": {
    "markdown": "# RStudio入門\n\n**今回の目標**\n\n-   RStudio（とR）の基本的な操作を覚えよう！\n\n## プロジェクトの作成\n\nRStudio にはプロジェクト機能がある。この機能を使うと、プロジェクトの管理が容易になる。ここでは、「統計学2」をプロジェクトの1つと考え、新規プロジェクトを作成してみよう。\n\n以下のステップを踏めば、プロジェクトが作れる。\n\n1.  コンピュータの自分のファイルが保存できる場所（たとえば、「ドキュメント」）に、この授業（統計学2）用のフォルダ（ディレクトリ； directory）を作る。\n\n-   フォルダ名は**アルファベットと数字のみ**で付ける\n-   フォルダ名の最初の文字はアルファベットにする\n-   ファルダ名に**スペース（空白）を使わない**!\n-   フォルダ名の例: stat2\n\n::: callout-important\n大学の情報演習室にあるパソコンを使っている場合は、**Zドライブ** にフォルダを作る。 授業で説明するので、説明をよく聞くように。説明がよくわからない場合は、担当教員またはSAに**その場ですぐに**質問しよう。\n:::\n\n2.  上部のメニューで、File -\\> New Project を選ぶ\n3.  Existing Directory（既存のディレクトリ）を選ぶ\n4.  browse（閲覧）を押して、自分が作ったフォルダ（ディレクトリ）を選び、右下の Create Project をクリックする\n\nこれで新しいプロジェクトができる。プロジェクト名（自分で作ったフォルダの名前がそのまま使われる）は RStudioの右上に表示される。\n\n次回以降、このプロジェクトを開くには、File -\\> Open Project でこのプロジェクトを選べばよい。\n\n::: callout-important\n大学の情報演習室にあるパソコンを使っている場合は、**Zドライブ** 経由でプロジェクトを開く必要がある。授業で説明するので、説明をよく聞くように。わからなくなったら、担当教員またはSAに**その場ですぐに**質問しよう。\n:::\n\n## Rスクリプトの作成と利用\n\nRのコマンド（命令文）は、RStudio 右側（あるいは左下）の Console に直接打ち込むこともできる。しかし、通常はそのような使い方はしない。代わりに、Rの命令が書かれたファイルを別に作り、その中に命令を記入する。\n\nRStudio で新しいRスクリプトを作るには、RStudioで 「Cmd/Ctrl + Shift + N」を入力する （あるいはRStudio 上部のメニューで、File -\\> New File -\\> R Script の順番で選ぶ）。そうすると、RStudio の左側のウィンドウが上下に2分割されるはずである。このとき、左上に新たに開くのがRスクリプトである。（左下が Hisotory の場合は、不要なので最小化する。左下 Console の場合はそのままにする）\n\nRスクリプトができたら、「Cmd/Ctrl + S」 を押し、名前をつけて保存しよう（名前の付け方はフォルダ名の付け方と同じルールで）。このファイルにRの命令を書き込む。基本的には、1つの行には1つの命令しか書かない。\n\nこのファイルに書いた命令を実行したいときは、実行したい行にカーソルをおいた状態で、「Cmd/Ctrl + Return/Enter」を押す。すると、命令がConsole に送られ、実行される。\n\n## コメントの利用\n\nRスクリプトには、Rに送る命令以外に、自分（あるいは他の人間）用のコメントを書き込むことができる。Rでコメントを書くときは、`#` （ハッシュ）という記号を使う。Rは、その行で `#` より後にあるものを無視する。\n\n::: callout-warning\n`#` は半角！\n:::\n\nたとえば、以下の3行をRで実行すると、2行目と3行目は無視される。\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(4, 5, 3, 4, 6, 7, 1, 2, 9)\n# a の標準偏差を求めたい\n# 標準偏差は英語では standard deviation; sd() という関数を使う\nsd(a)\n```\n\n::: {.cell-output-stdout}\n```\n[1] 2.505549\n```\n:::\n:::\n\n::: callout-tip\n`<-` という記号は、「Option/Alt + - \\[マイナス\\] 」で入力する。\n:::\n\nスクリプトに命令だけ書いても、命令の意味を忘れてしまったり、自分がなぜその命令を書いたのか後でわからなくなったりするので、どんどんコメントを書き込もう。\n\n::: callout-important\n**コメントは人の為ならず**：コメントしておくことで、未来の自分に感謝される！\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}